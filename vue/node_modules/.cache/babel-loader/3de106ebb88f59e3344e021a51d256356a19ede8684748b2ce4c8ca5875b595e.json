{"ast":null,"code":"export default {\n  name: \"Orders\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      username: null,\n      fromVisible: false,\n      fromVisible1: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: [],\n      business: [],\n      users: [],\n      ordersItem: []\n    };\n  },\n  created() {\n    this.load(1);\n    this.$request.get('/business/selectAll', {\n      params: {\n        status: '通过'\n      }\n    }).then(res => {\n      this.business = res.data;\n    });\n    this.$request.get('/user/selectAll').then(res => {\n      this.users = res.data;\n    });\n  },\n  methods: {\n    changeStatus(row, status) {\n      let form = JSON.parse(JSON.stringify(row));\n      form.status = status;\n      this.$request.put('/orders/update', form).then(res => {\n        if (res.code === '200') {\n          // 表示成功保存\n          this.$message.success('操作成功');\n          this.load(1);\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n\n    loadDetail(id) {\n      this.$request.get('/ordersItem/selectAll', {\n        params: {\n          orderId: id\n        }\n      }).then(res => {\n        this.ordersItem = res.data;\n        this.fromVisible1 = true;\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/orders/update' : '/orders/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/orders/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/orders/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/orders/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.username = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","username","fromVisible","fromVisible1","form","user","JSON","parse","localStorage","getItem","rules","ids","business","users","ordersItem","created","load","$request","get","params","status","then","res","methods","changeStatus","row","stringify","put","code","$message","success","error","msg","loadDetail","id","orderId","handleAdd","handleEdit","save","$refs","formRef","validate","valid","url","method","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","list","reset","handleCurrentChange"],"sources":["src/views/manager/Orders.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入关键字查询\" style=\"width: 200px\" v-model=\"username\" @keyup.enter.native=\"load(1)\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"orderNo\" label=\"订单编号\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"订单名称\"></el-table-column>\n        <el-table-column prop=\"status\" label=\"订单状态\">\n          <template v-slot=\"scope\">\n            <el-tag type=\"danger\" v-if=\"scope.row.status === '已取消'\">已取消</el-tag>\n            <el-tag type=\"warning\" v-if=\"scope.row.status === '待支付'\">待支付</el-tag>\n            <el-tag type=\"primary\" v-if=\"scope.row.status === '待发货'\">待发货</el-tag>\n            <el-tag type=\"primary\" v-if=\"scope.row.status === '待收货'\">待收货</el-tag>\n            <el-tag type=\"info\" v-if=\"scope.row.status === '待评价'\">待评价</el-tag>\n            <el-tag type=\"success\" v-if=\"scope.row.status === '已完成'\">已完成</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"businessName\" label=\"接单商家\"></el-table-column>\n        <el-table-column prop=\"address\" label=\"送货地址\"></el-table-column>\n        <el-table-column prop=\"phone\" label=\"下单人电话\"></el-table-column>\n        <el-table-column prop=\"userName\" label=\"下单人\"></el-table-column>\n        <el-table-column prop=\"amount\" label=\"订单总价\"></el-table-column>\n        <el-table-column prop=\"discount\" label=\"优惠金额\"></el-table-column>\n        <el-table-column prop=\"actual\" label=\"实付款\"></el-table-column>\n        <el-table-column prop=\"comment\" label=\"备注\"></el-table-column>\n        <el-table-column prop=\"time\" label=\"下单时间\"></el-table-column>\n        <el-table-column prop=\"payTime\" label=\"支付时间\"></el-table-column>\n        <el-table-column label=\"详情\" align=\"center\" width=\"90\" fixed=\"right\">\n          <template v-slot=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"loadDetail(scope.row.id)\">查看详情</el-button>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"240\" fixed=\"right\">\n          <template v-slot=\"scope\">\n            <el-button size=\"mini\" type=\"info\" @click=\"changeStatus(scope.row, '待收货')\" v-if=\"scope.row.status === '待发货'\">发货</el-button>\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n    <el-dialog title=\"订单信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"订单编号\" prop=\"orderNo\">\n          <el-input v-model=\"form.orderNo\" placeholder=\"订单编号\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"订单名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"订单名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"订单状态\" prop=\"status\">\n          <el-select style=\"width: 100%\" v-model=\"form.status\">\n            <el-option v-for=\"item in ['已取消', '待支付', '待发货', '待收货', '待评价', '已完成']\" :key=\"item\" :value=\"item\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"下单时间\" prop=\"time\">\n          <el-date-picker disabled format=\"yyyy-MM-dd HH:mm:ss\" value-format=\"yyyy-MM-dd HH:mm:ss\"\n                          v-model=\"form.time\" style=\"width: 100%\"></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"支付时间\" prop=\"payTime\">\n          <el-date-picker disabled format=\"yyyy-MM-dd HH:mm:ss\" value-format=\"yyyy-MM-dd HH:mm:ss\"\n                          v-model=\"form.payTime\" style=\"width: 100%\"></el-date-picker>\n        </el-form-item>\n\n        <el-form-item label=\"接单商家\" prop=\"managerId\">\n          <el-select disabled style=\"width: 100%\" v-model=\"form.businessId\">\n            <el-option v-for=\"item in business\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"送货地址\" prop=\"address\">\n          <el-input v-model=\"form.address\" placeholder=\"送货地址\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"下单人电话\" prop=\"phone\">\n          <el-input v-model=\"form.phone\" placeholder=\"下单人电话\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"下单人\" prop=\"userId\">\n          <el-select style=\"width: 100%\" v-model=\"form.userId\">\n            <el-option v-for=\"item in users\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"订单总价\" prop=\"amount\">\n          <el-input v-model=\"form.amount\" placeholder=\"订单总价\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"优惠金额\" prop=\"discount\">\n          <el-input v-model=\"form.discount\" placeholder=\"优惠金额\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"实付款\" prop=\"actual\">\n          <el-input v-model=\"form.actual\" placeholder=\"实付款\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"备注\" prop=\"comment\">\n          <el-input v-model=\"form.comment\" placeholder=\"备注\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"订单详情信息\" :visible.sync=\"fromVisible1\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-table :data=\"ordersItem\" strip @selection-change=\"handleSelectionChange\">\n        <el-table-column prop=\"orderId\" label=\"订单ID\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"goodsName\" label=\"商品名称\"></el-table-column>\n        <el-table-column prop=\"goodsImg\" label=\"商品图片\">\n          <template v-slot=\"scope\">\n            <div style=\"display: flex; align-items: center\">\n              <el-image style=\"width: 40px; height: 40px;\" v-if=\"scope.row.goodsImg\"\n                        :src=\"scope.row.goodsImg\" :preview-src-list=\"[scope.row.goodsImg]\"></el-image>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"price\" label=\"商品价格\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"num\" label=\"购买数量\" align=\"center\"></el-table-column>\n      </el-table>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"fromVisible1 = false\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n<script>\nexport default {\n  name: \"Orders\",\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      username: null,\n      fromVisible: false,\n      fromVisible1: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n      },\n      ids: [],\n      business: [],\n      users: [],\n      ordersItem: [],\n    }\n  },\n  created() {\n    this.load(1)\n\n    this.$request.get('/business/selectAll', {\n      params: {\n        status: '通过'\n      }\n    }).then(res => {\n      this.business = res.data\n    })\n\n    this.$request.get('/user/selectAll').then(res => {\n      this.users = res.data\n    })\n\n  },\n  methods: {\n    changeStatus(row, status) {\n      let form = JSON.parse(JSON.stringify(row))\n      form.status = status\n      this.$request.put('/orders/update', form).then(res => {\n        if (res.code === '200') {  // 表示成功保存\n          this.$message.success('操作成功')\n          this.load(1)\n        } else {\n          this.$message.error(res.msg)  // 弹出错误的信息\n        }\n      })\n    },\n    loadDetail(id) {\n      this.$request.get('/ordersItem/selectAll', {\n        params: {\n          orderId: id\n        }\n      }).then(res => {\n        this.ordersItem = res.data\n        this.fromVisible1 = true\n      })\n    },\n    handleAdd() {   // 新增数据\n      this.form = {}  // 新增数据的时候清空数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/orders/update' : '/orders/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/orders/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/orders/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/orders/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username,\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        \n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.username = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}