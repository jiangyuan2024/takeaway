{"ast":null,"code":"export default {\n  name: \"Goods\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      business: [],\n      category: [],\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n    this.$request.get('/business/selectAll', {\n      params: {\n        status: '通过'\n      }\n    }).then(res => {\n      this.business = res.data;\n    });\n    let businessId = this.user.role === 'ADMIN' ? null : this.user.id;\n    this.$request.get('/category/selectAll', {\n      params: {\n        businessId: businessId\n      }\n    }).then(res => {\n      this.category = res.data;\n    });\n  },\n  methods: {\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/goods/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleFileSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","business","category","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","created","load","$request","get","params","status","then","res","businessId","role","id","methods","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","method","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","list","reset","handleCurrentChange","handleFileSuccess","file","fileList","img"],"sources":["src/views/manager/Goods.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入关键字查询\" style=\"width: 200px\" v-model=\"name\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @upkey=\"\" @click=\"load(1)\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\n        <el-table-column prop=\"price\" label=\"价格\"></el-table-column>\n        <el-table-column prop=\"discount\" label=\"折扣\"></el-table-column>\n        <el-table-column prop=\"img\" label=\"图片\">\n          <template v-slot=\"scope\">\n            <div style=\"display: flex; align-items: center\">\n              <el-image style=\"width: 40px; height: 40px;\" v-if=\"scope.row.img\"\n                        :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"descr\" label=\"描述\"></el-table-column>\n        <el-table-column prop=\"origin\" label=\"原材料\"></el-table-column>\n        <el-table-column prop=\"taste\" label=\"口味\"></el-table-column>\n        <el-table-column prop=\"specs\" label=\"规格\"></el-table-column>\n        <el-table-column prop=\"date\" label=\"上架日期\"></el-table-column>\n        <el-table-column prop=\"status\" label=\"上架状态\">\n          <template v-slot=\"scope\">\n            <el-tag type=\"success\" v-if=\"scope.row.status === '上架'\">上架</el-tag>\n            <el-tag type=\"warning\" v-if=\"scope.row.status === '下架'\">下架</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"businessName\" label=\"商家\"></el-table-column>\n        <el-table-column prop=\"categoryName\" label=\"分类\"></el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\n          <template v-slot=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n    <el-dialog title=\"商品信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"价格\" prop=\"price\">\n          <el-input v-model=\"form.price\" placeholder=\"价格\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"折扣\" prop=\"discount\">\n          <el-input v-model=\"form.discount\" placeholder=\"折扣: 1表示不打折，折扣可以设置小数\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"图片\" prop=\"img\">\n          <el-upload\n              :action=\"$baseUrl + '/files/upload'\"\n              :headers=\"{ token: user.token }\"\n              :on-success=\"handleFileSuccess\"\n          >\n            <el-button type=\"primary\">上传</el-button>\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"descr\">\n          <el-input v-model=\"form.descr\" placeholder=\"描述\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"原材料\" prop=\"origin\">\n          <el-input v-model=\"form.origin\" placeholder=\"原材料\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"口味\" prop=\"taste\">\n          <el-input v-model=\"form.taste\" placeholder=\"口味\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"规格\" prop=\"specs\">\n          <el-input v-model=\"form.specs\" placeholder=\"规格\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"上架日期\" prop=\"date\">\n          <el-date-picker format=\"yyyy-MM-dd\" value-format=\"yyyy-MM-dd\"\n                          v-model=\"form.date\" style=\"width: 100%\"></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"上架状态\" prop=\"status\">\n         <el-radio-group v-model=\"form.status\">\n           <el-radio label=\"上架\"></el-radio>\n           <el-radio label=\"下架\"></el-radio>\n         </el-radio-group>\n        </el-form-item>\n\n        <el-form-item label=\"商家\" prop=\"businessId\" v-if=\"user.role === 'ADMIN'\">\n          <el-select style=\"width: 100%\" v-model=\"form.businessId\">\n            <el-option v-for=\"item in business\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"分类\" prop=\"categoryId\">\n          <el-select style=\"width: 100%\" v-model=\"form.categoryId\">\n            <el-option v-for=\"item in category\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n<script>\nexport default {\n  name: \"Goods\",\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      business: [],\n      category: [],\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n      },\n      ids: []\n    }\n  },\n  created() {\n    this.load(1)\n\n    this.$request.get('/business/selectAll', {\n      params: {\n        status: '通过'\n      }\n    }).then(res => {\n      this.business = res.data\n    })\n    let businessId = this.user.role === 'ADMIN' ? null : this.user.id\n    this.$request.get('/category/selectAll', {\n      params: {\n        businessId: businessId\n      }\n    }).then(res => {\n      this.category = res.data\n    })\n  },\n  methods: {\n    handleAdd() {   // 新增数据\n      this.form = {}  // 新增数据的时候清空数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/goods/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/goods/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/goods/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.name = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n    handleFileSuccess(response, file, fileList) {\n      this.form.img = response.data\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}